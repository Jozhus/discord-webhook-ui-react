{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","props","sendMessage","bind","message","axios","method","url","data","content","then","toast","success","catch","error","Fragment","Label","Button","onClick","color","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qRAMMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,wDAMPC,GACVC,IAAM,CACJC,OAAQ,OACRC,IAAK,2HACLC,KAAM,CACJC,QAASL,KAGVM,MAAK,WACJC,IAAMC,QAAQ,oBAEfC,OAAM,WACLF,IAAMG,MAAM,gC,+BAIR,IAAD,OACP,OACE,eAAC,IAAMC,SAAP,WA4CE,cAACC,EAAA,EAAD,oBAGA,uBACA,cAACC,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,mBADpC,oBAKA,cAACe,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,iBADpC,kBAKA,cAACe,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,oBADpC,qBAKA,cAACe,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,kBADpC,mBAKA,cAACe,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,mBADpC,oBAKA,uBACA,cAACc,EAAA,EAAD,mBAGA,uBACA,cAACC,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,iBAClCiB,MAAM,UAFR,kBAMA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,mBAClCiB,MAAM,SAFR,oBAMA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,oBADpC,oBAKA,cAACe,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,qBADpC,wBAKA,cAACe,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,0BADpC,gCAKA,cAACe,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKhB,YAAY,mBAClCiB,MAAM,SAFR,wB,GAlIUC,IAAMC,WCHxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c4f61bb4.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport { Button, Label } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  sendMessage(message) {\n    axios({\n      method: \"POST\",\n      url: \"https://discord.com/api/webhooks/786068461251198996/MR6JmvED_ujJ7iFLHgE4ahnQsjDfsrQf40HFqYEHWVewlPChN9eM_6iEJIKxbnM4tMrt\",\n      data: {\n        content: message\n      }\n    })\n      .then(() => {\n        toast.success(\"Message sent!\");\n      })\n      .catch(() => {\n        toast.error(\"Message failed to send!\");\n      })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {/*\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say dragon\") }}\n        >\n          Dragon\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say left\") }}\n        >\n          Left\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say right\") }}\n        >\n          Right\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say bomb\") }}\n        >\n          Bomb\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say lasers\") }}\n        >\n          Lasers\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say touch\") }}\n        >\n          Touch\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say cleanse\") }}\n        >\n          Cleanse\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc clear\") }}\n          color=\"danger\"\n        >\n          Clear message queue\n        </Button>\n        */}\n        <Label>\n          Lucid\n        </Label>\n        <br />\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say dragon\") }}\n        >\n          Dragon\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say bomb\") }}\n        >\n          Bomb\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say cleanse\") }}\n        >\n          Cleanse\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say touch\") }}\n        >\n          Touch\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say lasers\") }}\n        >\n          Lasers\n        </Button>\n        <hr />\n        <Label>\n          Will\n        </Label>\n        <br />\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say blue\") }}\n          color=\"primary\"\n        >\n          Blue\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say purple\") }}\n          color=\"danger\"\n        >\n          Purple\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTimer sync\") }}\n        >\n          Resync\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTimer phase\") }}\n        >\n          Next phase\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTimer start will\") }}\n        >\n          Start timer (Will)\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTimer end\") }}\n          color=\"danger\"\n        >\n          End\n        </Button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport { App };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}