{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","props","sendMessage","bind","message","axios","method","url","data","content","then","toast","success","catch","error","Fragment","Button","onClick","color","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4QAMMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,wDAMPC,GACVC,IAAM,CACJC,OAAQ,OACRC,IAAK,2HACLC,KAAM,CACJC,QAASL,KAGVM,MAAK,WACJC,IAAMC,QAAQ,oBAEfC,OAAM,WACLF,IAAMG,MAAM,gC,+BAIR,IAAD,OACP,OACE,eAAC,IAAMC,SAAP,WA4CE,cAACC,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKf,YAAY,iBAClCgB,MAAM,SAFR,kBAMA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKf,YAAY,mBAClCgB,MAAM,SAFR,oBAMA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKf,YAAY,oBAClCgB,MAAM,SAFR,oBAMA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKf,YAAY,qBAClCgB,MAAM,SAFR,wBAMA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKf,YAAY,0BAClCgB,MAAM,SAFR,gCAMA,cAACF,EAAA,EAAD,CACEC,QAAS,WAAQ,EAAKf,YAAY,kBAClCgB,MAAM,SAFR,wB,GAnGUC,IAAMC,WCHxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.63542e16.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  sendMessage(message) {\n    axios({\n      method: \"POST\",\n      url: \"https://discord.com/api/webhooks/786068461251198996/MR6JmvED_ujJ7iFLHgE4ahnQsjDfsrQf40HFqYEHWVewlPChN9eM_6iEJIKxbnM4tMrt\",\n      data: {\n        content: message\n      }\n    })\n      .then(() => {\n        toast.success(\"Message sent!\");\n      })\n      .catch(() => {\n        toast.error(\"Message failed to send!\");\n      })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {/*\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say dragon\") }}\n        >\n          Dragon\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say left\") }}\n        >\n          Left\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say right\") }}\n        >\n          Right\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say bomb\") }}\n        >\n          Bomb\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say lasers\") }}\n        >\n          Lasers\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say touch\") }}\n        >\n          Touch\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say cleanse\") }}\n        >\n          Cleanse\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc clear\") }}\n          color=\"danger\"\n        >\n          Clear message queue\n        </Button>\n        */}\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say blue\") }}\n          color=\"danger\"\n        >\n          Blue\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!vc say purple\") }}\n          color=\"danger\"\n        >\n          Purple\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTimer sync\") }}\n          color=\"danger\"\n        >\n          Resync\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTimer phase\") }}\n          color=\"danger\"\n        >\n          Next phase\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTimer start will\") }}\n          color=\"danger\"\n        >\n          Start timer (Will)\n        </Button>\n        <Button\n          onClick={() => { this.sendMessage(\"!bossTime end\") }}\n          color=\"danger\"\n        >\n          End\n        </Button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport { App };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}